
import java.sql.SQLException;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author OLA
 */
public class Lectural extends javax.swing.JFrame {
 DbConnect dbcon = new DbConnect();
    Vector<Integer> lectural_id = new Vector<Integer>();
    int h_id;

    /**
     * Creates new form LECTURRER
     */
    public Lectural() {
        initComponents();
        fetch();
        fetchCombo();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jTextField2 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setBackground(new java.awt.Color(51, 51, 51));
        jLabel1.setFont(new java.awt.Font("Trebuchet MS", 0, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(153, 0, 204));
        jLabel1.setText(" LECTURAL REGISTRATION");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 20, 240, 30));

        jLabel2.setFont(new java.awt.Font("Trebuchet MS", 0, 18)); // NOI18N
        jLabel2.setText("List of lectureres");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 300, 160, 20));

        jLabel3.setFont(new java.awt.Font("Trebuchet MS", 0, 18)); // NOI18N
        jLabel3.setText("Lecturer's id:");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 130, 120, 42));

        jLabel4.setFont(new java.awt.Font("Trebuchet MS", 0, 18)); // NOI18N
        jLabel4.setText("Department:");
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 190, 120, 42));

        jTextField1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel1.add(jTextField1, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 50, 380, 46));

        jTextField2.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel1.add(jTextField2, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 120, 380, 46));

        jButton1.setFont(new java.awt.Font("Trebuchet MS", 0, 18)); // NOI18N
        jButton1.setText("save");
        jButton1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 250, 160, 30));

        jLabel5.setFont(new java.awt.Font("Trebuchet MS", 0, 18)); // NOI18N
        jLabel5.setText("Lecturer's name:");
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 60, -1, 42));

        jPanel2.setBackground(new java.awt.Color(153, 0, 204));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jButton2.setFont(new java.awt.Font("Trebuchet MS", 0, 14)); // NOI18N
        jButton2.setText("Remove");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 310, 106, 30));

        jButton3.setFont(new java.awt.Font("Trebuchet MS", 0, 14)); // NOI18N
        jButton3.setText("Update");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(160, 310, 109, 30));

        jButton4.setFont(new java.awt.Font("Trebuchet MS", 0, 14)); // NOI18N
        jButton4.setText("Close");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton4, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 310, 110, 30));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(jTable1);

        jPanel2.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 10, 590, 290));

        jPanel1.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 330, 630, 350));

        jLabel6.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createEtchedBorder(), new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED)));
        jPanel1.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 10, 610, 290));

        jLabel7.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel1.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 320, 660, 370));

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jPanel1.add(jComboBox1, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 180, 380, 50));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
 if(formValidate()==1){
          JOptionPane.showMessageDialog(rootPane, "Please supply all required fields");
      return;
      }        
        
           if(jButton1.getText().equalsIgnoreCase("Update")){
      updateData();
      return;
      }
        save();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        delete();   
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
this.setVisible(false);        // TODO add your handling code here:
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        update(); 
    }//GEN-LAST:event_jButton3ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Lectural.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Lectural.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Lectural.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Lectural.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Lectural().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    // End of variables declaration//GEN-END:variables

private void save() {
        String name = jTextField1.getText();
        String code= jTextField2.getText();
        String department = jComboBox1.getSelectedItem().toString();
        try {
            String query = "insert into lectural (name,code,department) values(?,?,?)";
            dbcon.ps = dbcon.con.prepareStatement(query);
            dbcon.ps.setString(1, name);
            dbcon.ps.setString(2, code);
            dbcon.ps.setString(3, department);
            if (dbcon.ps.executeUpdate() == 1) {
                JOptionPane.showMessageDialog(rootPane, "Information Saved Successfully");
                fetch();
                clear();
            } else {
                JOptionPane.showMessageDialog(rootPane, "An Error Occur, Your information is not save");
            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(rootPane, "An Error Occur, Your information is not save");
            e.printStackTrace();
        }
    }

    private void fetch() {
        int j=0;
        DefaultTableModel model = new DefaultTableModel();
        lectural_id = new Vector<Integer>();
        model.addColumn("S/N");
        model.addColumn("NAME");
        model.addColumn("ID");
        model.addColumn("DEPARTMENT");
//=+
        try {
            String query = "select id,name,code,department from lectural where status=0";
            int id;
            String name;
            String code;
            String department;
            dbcon.rs = dbcon.st.executeQuery(query);
            while (dbcon.rs.next()) {
                id=dbcon.rs.getInt("id");
                name=dbcon.rs.getString("name");
                code=dbcon.rs.getString("code");
                department=dbcon.rs.getString("department");
                String[] object = new String[]{++j+"",name,code,department};
                lectural_id.addElement(id);
                model.addRow(object);
            }
            jTable1.setModel(model);
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(rootPane, "An Error Occur while fetching information from database");
            ex.printStackTrace();
        }
    }

    private void delete() {
   int i = jTable1.getSelectedRow();
   if(i<0){
       JOptionPane.showMessageDialog(rootPane, "Please select a feild to be deleted");
   return;
   }
   int id=lectural_id.elementAt(i);
        try {
           String query="delete from lectural where id="+id;
           dbcon.ps=dbcon.con.prepareStatement(query);
          if (dbcon.ps.executeUpdate() == 1) {
                JOptionPane.showMessageDialog(rootPane, "Information Deleted Successfully");
                fetch();
                clear();
            } else {
                JOptionPane.showMessageDialog(rootPane, "An Error Occur, Your information is affected");
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
    private void update(){
        int i = jTable1.getSelectedRow();
         String name = jTable1.getValueAt(i, 1).toString();
        String code = jTable1.getValueAt(i,2).toString();
        String department= jTable1.getValueAt(i,3).toString();
        jTextField1.setText(name);
        jTextField2.setText(code);
        jComboBox1.setSelectedItem(department);
        h_id=lectural_id.elementAt(i);
        jButton1.setText("Update");
      if(i<0){
       JOptionPane.showMessageDialog(rootPane, "Please select a feild to be update");
   return;
   }  
    }

    private void updateData() {
        String name = jTextField1.getText();
        String code = jTextField2.getText();
        String department = jComboBox1.getSelectedItem().toString();
        int id=h_id;
        try {
            String query = "update lectural set name=?,code=?,department=? where id="+id;
            //UPDATE `hall` SET `description` = 'big enough' WHERE `id` =2;
            dbcon.ps = dbcon.con.prepareStatement(query);
            dbcon.ps.setString(1, name);
            dbcon.ps.setString(2, code);
            dbcon.ps.setString(3, department);
            if (dbcon.ps.executeUpdate() == 1) {
                JOptionPane.showMessageDialog(rootPane, "Information Updated Successfully");
                fetch();
                clear();
            } else {
                JOptionPane.showMessageDialog(rootPane, "An Error Occur, Your information is not affected");
            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(rootPane, "An Error Occur, Your information is not affected");
            e.printStackTrace();
        }
    }
    private void clear(){
      jTextField1.setText("");
        jTextField2.setText("");
         jComboBox1.setSelectedIndex(0);
    }

    private void fetchCombo() {
        DefaultComboBoxModel model = new DefaultComboBoxModel();
        model.addElement("-- Select Depertment --");
        try {
            String query = "select name from department where status=0";

            dbcon.rs = dbcon.st.executeQuery(query);
            while (dbcon.rs.next()) {
               model.addElement(dbcon.rs.getString(1));

            }
            jComboBox1.setModel(model);
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(rootPane, "An Error Occur while fetching information from database");
            ex.printStackTrace();
        }
    }
    
    private int formValidate(){
    if(jTextField1.getText().isEmpty()){
        jTextField1.requestFocus();
        return 1;
    }
    if(jTextField2.getText().isEmpty()){
        jTextField2.requestFocus();
        return 1;
    }
    if(jComboBox1.getSelectedIndex()==0){
        jComboBox1.requestFocus();
        return 1;
    }   
        return 0;
    }
    
}
